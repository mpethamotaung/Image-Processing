Requirements:

[DONE] # Setup and Project Configuration:
[DONE]    a. Set up a new Django project and application
[DONE]    b. Configure the necessary settings for file uploads

[DONE] # Model Creation
[DONE]    a. Create a Django model named ImageColor that contains:
[DONE]          i. An ImageField for the uploaded image.
[DONE]          ii. A CharField to store the hex color

[DONE] # Image Upload & Processing:
[DONE]    a. Implement a form to upload images
[DONE]    b. After the image is uploaded, extract the center-most pixels or 
            the average center-most 4 pixels' hex values.
[DONE]    c. Store the resulting hex value along with the image in the ImageColor model.

Deliverables:

[DONE] A Django application with the above features implemented.
[In Progress...] Brief documentation on how to set up, run, and test the application.

Bonus points:
[DONE]              # Frontend Enhancement
[DONE]                  a. Use Django's template system to display uploaded images along with 
                            extracted colors
[In Progress...]        b. Allow users to click on an image to view it in full along with its color

[DONE] # Error Handling
[DONE]      a. Implement error handling for non-image file uploads
[DONE]      b. Handle cases where image processing might fail

[DONE] # Efficiency
    a. extraction of center pixels without loading the entire image into memory

***Remember to pip freeze when done.
